{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\userPc\\\\Desktop\\\\react app\\\\first-app\\\\src\\\\Components\\\\ToDo\\\\ToDo.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport styles from './toDo.module.css';\nimport idGenerator from '../../Support/idGenerator';\nimport Task from '../Task/Task';\nimport AddTask from '../Addtask/AddTask';\nimport Confirm from '../Confirm/Confirm';\nimport EditTaskModal from '../EditTaskModal/EditTaskModal';\n\nclass ToDo extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: [],\n      selected: new Set(),\n      showConfirm: false,\n      editTask: null\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        this.handleClick();\n      }\n    };\n\n    this.handleClick = value => {\n      let newTask = {\n        value: value,\n        _id: idGenerator()\n      };\n      let task = [newTask, ...this.state.task];\n      this.setState({\n        task: task\n      });\n    };\n\n    this.removeTask = taskid => {\n      let newTasks = this.state.task.filter(task => taskid !== task._id);\n      this.setState({\n        task: newTasks\n      });\n    };\n\n    this.handleCheck = taskid => {\n      let selected = new Set(this.state.selected);\n\n      if (selected.has(taskid)) {\n        selected.delete(taskid);\n      } else {\n        selected.add(taskid);\n      }\n\n      ;\n      this.setState({\n        selected\n      });\n    };\n\n    this.removeSelectid = taskid => {\n      let task = [...this.state.task];\n      this.state.selected.forEach(id => {\n        task = task.filter(task => task._id !== id);\n        this.setState({\n          task,\n          selected: new Set(),\n          showConfirm: false\n        });\n      });\n    };\n\n    this.toggleConfirm = () => {\n      this.setState({\n        showConfirm: !this.state.showConfirm\n      });\n    };\n\n    this.toggleEdit = task => {\n      this.setState({\n        editTask: task\n      });\n    };\n\n    this.saveTask = editTask => {\n      let task = [...this.state.task];\n      let foundTask = task.findIndex(task => task._id === editTask._id);\n      console.log(\"ðŸš€ ~ file: ToDo.jsx ~ line 89 ~ ToDo ~ foundTask\", foundTask);\n      console.log(\"ðŸš€ \", task[foundTask]);\n      this.setState({\n        foundTask\n      });\n    };\n  }\n\n  render() {\n    let {\n      selected,\n      showConfirm,\n      editTask\n    } = this.state;\n    let card = this.state.task.map(task => {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: task._id,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Task, {\n        data: task,\n        onRemove: this.removeTask,\n        onCheck: this.handleCheck,\n        onEdit: this.toggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.toDo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: `${styles.buttonRemove} 'justify-content-center'`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      xs: 6,\n      md: 12,\n      es: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      onAdd: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, card), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      onClick: this.toggleConfirm,\n      disabled: !selected.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Remove Task\")))), showConfirm && /*#__PURE__*/React.createElement(Confirm, {\n      onSubmit: this.removeSelectid,\n      onClose: this.toggleConfirm,\n      count: selected.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }), !!editTask && /*#__PURE__*/React.createElement(EditTaskModal, {\n      data: editTask,\n      onSave: this.saveTask,\n      onClose: () => {\n        this.toggleEdit(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\n;\nexport default ToDo;","map":{"version":3,"sources":["C:/Users/userPc/Desktop/react app/first-app/src/Components/ToDo/ToDo.jsx"],"names":["React","PureComponent","Button","Container","Row","Col","styles","idGenerator","Task","AddTask","Confirm","EditTaskModal","ToDo","state","task","selected","Set","showConfirm","editTask","handleChange","event","setState","inputValue","target","value","handleKeyDown","key","handleClick","newTask","_id","removeTask","taskid","newTasks","filter","handleCheck","has","delete","add","removeSelectid","forEach","id","toggleConfirm","toggleEdit","saveTask","foundTask","findIndex","console","log","render","card","map","toDo","buttonRemove","size"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport styles from './toDo.module.css';\r\nimport idGenerator from '../../Support/idGenerator'\r\nimport Task from '../Task/Task';\r\nimport AddTask from '../Addtask/AddTask';\r\nimport Confirm from '../Confirm/Confirm';\r\nimport EditTaskModal from '../EditTaskModal/EditTaskModal';\r\n\r\n\r\n\r\nclass ToDo extends PureComponent {\r\n    state = {\r\n        task: [],\r\n        selected: new Set(),\r\n        showConfirm: false,\r\n        editTask: null\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.handleClick();\r\n        }\r\n    }\r\n    handleClick = (value) => {\r\n\r\n        let newTask = {\r\n            value: value,\r\n            _id: idGenerator()\r\n        };\r\n\r\n        let task = [newTask, ...this.state.task]\r\n        this.setState({\r\n            task: task\r\n\r\n        })\r\n    }\r\n    removeTask = (taskid) => {\r\n        let newTasks = this.state.task.filter((task) => taskid !== task._id)\r\n        this.setState({\r\n            task: newTasks\r\n        })\r\n    }\r\n    handleCheck = (taskid) => {\r\n        let selected = new Set(this.state.selected);\r\n        if (selected.has(taskid)) {\r\n            selected.delete(taskid)\r\n        }\r\n        else {\r\n            selected.add(taskid)\r\n        };\r\n        this.setState({\r\n            selected\r\n        })\r\n\r\n    };\r\n    removeSelectid = (taskid) => {\r\n        let task = [...this.state.task];\r\n        this.state.selected.forEach((id) => {\r\n            task = task.filter((task) => task._id !== id);\r\n            this.setState({\r\n                task,\r\n                selected: new Set(),\r\n                showConfirm: false\r\n            });\r\n\r\n        });\r\n    };\r\n    toggleConfirm = () => {\r\n        this.setState({\r\n            showConfirm: !this.state.showConfirm\r\n\r\n        });\r\n    };\r\n    toggleEdit = (task) =>{\r\n        this.setState({\r\n            editTask: task\r\n        })\r\n    }\r\n    saveTask =(editTask) =>{\r\n        let task =[...this.state.task];\r\n        let foundTask = task.findIndex((task) => task._id === editTask._id);\r\n        console.log(\"ðŸš€ ~ file: ToDo.jsx ~ line 89 ~ ToDo ~ foundTask\", foundTask);\r\n        console.log(\"ðŸš€ \", task[foundTask]);\r\n        this.setState({\r\n            foundTask\r\n        })\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        let { selected, showConfirm, editTask } = this.state;\r\n\r\n        let card = this.state.task.map((task) => {\r\n            return (\r\n                <Col key={task._id} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <Task\r\n                        data={task}\r\n                        onRemove={this.removeTask}\r\n                        onCheck={this.handleCheck}\r\n                        onEdit = {this.toggleEdit}\r\n                    />\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className={styles.toDo}>\r\n                    < Container>\r\n                        <Row className={`${styles.buttonRemove} 'justify-content-center'`}>\r\n                            <Col sm={8} xs={6} md={12} es={4}>\r\n                                <AddTask\r\n                                    onAdd={this.handleClick} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row >\r\n                            {card}\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col xs={4}>\r\n                                <Button\r\n                                    variant='outline-danger'\r\n                                    onClick={this.toggleConfirm}\r\n                                    disabled={!selected.size}>\r\n                                    Remove Task\r\n                            </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    {showConfirm &&\r\n                        < Confirm\r\n                            onSubmit={this.removeSelectid}\r\n                            onClose={this.toggleConfirm}\r\n                            count={selected.size}\r\n                        />}\r\n                    {!!editTask &&\r\n                        <EditTaskModal \r\n                        data={editTask}\r\n                        onSave = {this.saveTask}\r\n                        onClose = {() => {this.toggleEdit(null)}}\r\n\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}