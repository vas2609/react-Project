{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\userPc\\\\Desktop\\\\react app\\\\first-app\\\\src\\\\Components\\\\ToDo\\\\ToDo.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport styles from './toDo.module.css';\nimport Task from '../Task/Task';\nimport AddTask from '../Addtask/AddTask';\nimport Confirm from '../Confirm/Confirm';\nimport EditTaskModal from '../EditTaskModal/EditTaskModal';\n\nclass ToDo extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: [],\n      selected: new Set(),\n      showConfirm: false,\n      editTask: null\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        this.handleClick();\n      }\n    };\n\n    this.handleClick = data => {\n      let body = JSON.stringify(data);\n      fetch(\"http://localhost:3001/task\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => {\n        res.json();\n      }).then(respons => {\n        let task = [respons, ...this.state.task];\n        this.setState({\n          task: task\n        });\n      });\n    };\n\n    this.removeTask = taskid => {\n      let newTasks = this.state.task.filter(task => taskid !== task._id);\n      this.setState({\n        task: newTasks\n      });\n    };\n\n    this.handleCheck = taskid => {\n      let selected = new Set(this.state.selected);\n\n      if (selected.has(taskid)) {\n        selected.delete(taskid);\n      } else {\n        selected.add(taskid);\n      }\n\n      ;\n      this.setState({\n        selected\n      });\n    };\n\n    this.removeSelectid = taskid => {\n      let task = [...this.state.task];\n      this.state.selected.forEach(id => {\n        task = task.filter(task => task._id !== id);\n        this.setState({\n          task,\n          selected: new Set(),\n          showConfirm: false\n        });\n      });\n    };\n\n    this.toggleConfirm = () => {\n      this.setState({\n        showConfirm: !this.state.showConfirm\n      });\n    };\n\n    this.toggleEdit = task => {\n      this.setState({\n        editTask: task\n      });\n    };\n\n    this.saveTask = editTask => {\n      let task = [...this.state.task];\n      let foundTask = task.findIndex(task => task._id === editTask._id);\n      task[foundTask] = editTask;\n      this.setState({\n        task: task\n      });\n      this.toggleEdit();\n    };\n  }\n\n  render() {\n    let {\n      selected,\n      showConfirm,\n      editTask\n    } = this.state;\n    let card = this.state.task.map(task => {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: data._id,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Task, {\n        data: task,\n        onRemove: this.removeTask,\n        onCheck: this.handleCheck,\n        onEdit: this.toggleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.toDo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: `${styles.buttonRemove} 'justify-content-center'`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      xs: 6,\n      md: 12,\n      es: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      onAdd: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, card), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      onClick: this.toggleConfirm,\n      disabled: !selected.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"Remove Task\")))), showConfirm && /*#__PURE__*/React.createElement(Confirm, {\n      onSubmit: this.removeSelectid,\n      onClose: this.toggleConfirm,\n      count: selected.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }), !!editTask && /*#__PURE__*/React.createElement(EditTaskModal, {\n      data: editTask,\n      onSave: this.saveTask,\n      onClose: () => {\n        this.toggleEdit(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\n;\nexport default ToDo;","map":{"version":3,"sources":["C:/Users/userPc/Desktop/react app/first-app/src/Components/ToDo/ToDo.jsx"],"names":["React","PureComponent","Button","Container","Row","Col","styles","Task","AddTask","Confirm","EditTaskModal","ToDo","state","task","selected","Set","showConfirm","editTask","handleChange","event","setState","inputValue","target","value","handleKeyDown","key","handleClick","data","body","JSON","stringify","fetch","method","headers","then","res","json","respons","removeTask","taskid","newTasks","filter","_id","handleCheck","has","delete","add","removeSelectid","forEach","id","toggleConfirm","toggleEdit","saveTask","foundTask","findIndex","render","card","map","toDo","buttonRemove","size"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport styles from './toDo.module.css';\r\n\r\nimport Task from '../Task/Task';\r\nimport AddTask from '../Addtask/AddTask';\r\nimport Confirm from '../Confirm/Confirm';\r\nimport EditTaskModal from '../EditTaskModal/EditTaskModal';\r\n\r\n\r\n\r\nclass ToDo extends PureComponent {\r\n    state = {\r\n        task: [],\r\n        selected: new Set(),\r\n        showConfirm: false,\r\n        editTask: null\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.handleClick();\r\n        }\r\n    }\r\n    handleClick = (data) => {\r\n        \r\n        let body = JSON.stringify(data)\r\n        fetch(\"http://localhost:3001/task\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body:body\r\n        })\r\n\r\n        .then((res) =>{res.json()})\r\n        .then((respons) =>{\r\n            let task =[respons,...this.state.task]\r\n            this.setState({\r\n                task:task\r\n            });\r\n        });\r\n      \r\n  };\r\n    removeTask = (taskid) => {\r\n        let newTasks = this.state.task.filter((task) => taskid !== task._id)\r\n        this.setState({\r\n            task: newTasks\r\n        })\r\n    }\r\n    handleCheck = (taskid) => {\r\n        let selected = new Set(this.state.selected);\r\n        if (selected.has(taskid)) {\r\n            selected.delete(taskid)\r\n        }\r\n        else {\r\n            selected.add(taskid)\r\n        };\r\n        this.setState({\r\n            selected\r\n        })\r\n\r\n    };\r\n    removeSelectid = (taskid) => {\r\n        let task = [...this.state.task];\r\n        this.state.selected.forEach((id) => {\r\n            task = task.filter((task) => task._id !== id);\r\n            this.setState({\r\n                task,\r\n                selected: new Set(),\r\n                showConfirm: false\r\n            });\r\n\r\n        });\r\n    };\r\n    toggleConfirm = () => {\r\n        this.setState({\r\n            showConfirm: !this.state.showConfirm\r\n\r\n        });\r\n    };\r\n    toggleEdit = (task) => {\r\n        this.setState({\r\n            editTask: task\r\n        })\r\n    }\r\n    saveTask = (editTask) => {\r\n        let task = [...this.state.task];\r\n        let foundTask = task.findIndex((task) => task._id === editTask._id);\r\n        task[foundTask] = editTask\r\n        this.setState({\r\n            task: task\r\n\r\n        });\r\n        this.toggleEdit();\r\n    };\r\n    render() {\r\n\r\n        let { selected, showConfirm, editTask } = this.state;\r\n\r\n        let card = this.state.task.map((task) => {\r\n            return (\r\n                <Col key={data._id} xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                    <Task\r\n                        data={task}\r\n                        onRemove={this.removeTask}\r\n                        onCheck={this.handleCheck}\r\n                        onEdit={this.toggleEdit}\r\n                    />\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className={styles.toDo}>\r\n                    < Container>\r\n                        <Row className={`${styles.buttonRemove} 'justify-content-center'`}>\r\n                            <Col sm={8} xs={6} md={12} es={4}>\r\n                                <AddTask\r\n                                    onAdd={this.handleClick} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row >\r\n                            {card}\r\n                        </Row>\r\n                        <Row className='justify-content-center'>\r\n                            <Col xs={4}>\r\n                                <Button\r\n                                    variant='outline-danger'\r\n                                    onClick={this.toggleConfirm}\r\n                                    disabled={!selected.size}>\r\n                                    Remove Task\r\n                            </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    {showConfirm &&\r\n                        < Confirm\r\n                            onSubmit={this.removeSelectid}\r\n                            onClose={this.toggleConfirm}\r\n                            count={selected.size}\r\n                        />}\r\n                    {!!editTask &&\r\n                        <EditTaskModal\r\n                            data={editTask}\r\n                            onSave={this.saveTask}\r\n                            onClose={() => { this.toggleEdit(null) }}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}